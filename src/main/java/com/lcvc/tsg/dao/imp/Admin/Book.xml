<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 指明这个映射文件adminMapper.xml的逻辑路径-->
<mapper namespace="com.lcvc.tsg.dao.AdminDao.BookDao">

    <!--========================== 展示书（分页,下面表关联的部分）==============================-->
    <resultMap id="book" type="Book">
        <!--关联BOOK类型表-->
        <association property="book_type" javaType="Book_Type" column="book_type"
                     select="com.lcvc.tsg.dao.AdminDao.BookDao.getBook_Type"></association>
        <!--关联管理员表-->
        <association property="book_creatorID" javaType="Admin" column="book_creatorID"
                     select="com.lcvc.tsg.dao.AdminDao.AdminDao.getAdmin"></association>
        <association property="book_editorsID" javaType="Admin" column="book_editorsID"
                     select="com.lcvc.tsg.dao.AdminDao.AdminDao.getAdmin"></association>
    </resultMap>

    <select id="BookShow" resultMap="book">
    SELECT * FROM book order by id asc limit #{index},#{totals}
</select>

    <!--========================== 查看书的总数用于分页==============================-->
    <select id="BookCount" resultType="int">

    SELECT COUNT(id) FROM book
</select>

    <!--=============================== 添加书籍 ==================================-->
    <insert id="AddBook" parameterType="Book">
    INSERT  INTO  book(id,book_id,book_type,book_name,book_author,book_icon,book_number,book_description,book_creatorID,book_editorsID,book_release_Date)
    VALUE (#{id},#{book_id},#{book_type.id},#{book_name},#{book_author},#{book_icon},#{book_number},#{book_description},#{book_creatorID.id},#{book_editorsID.id},#{book_release_Date})


</insert>


    <!--=============================== 获取单个书的类型==================================-->
    <select id="getBook_Type" resultType="Book_Type" parameterType="int">
    SELECT * FROM  book_type  WHERE id=#{id}
</select>

    <!--=============================== 获取所有书的类型==================================-->
    <select id="getBook_TypeAll" resultType="Book_Type">

    SELECT  * FROM book_type

</select>

    <!--=============================== 查看书有没有重名 ==================================-->
    <select id="BookRename" parameterType="String" resultType="int">
    SELECT COUNT(id) FROM book WHERE  book_name=#{BookName}

</select>
    <!--=============================== 通过id获取某本书 ==================================-->
    <select id="getBook" resultMap="book" parameterType="int">
    SELECT  * FROM book WHERE id=#{id}

</select>

    <!--=============================== 通过书编号获取某本书 ==================================-->
    <select id="getBook_whereBook_id" resultMap="book" parameterType="String">
    SELECT  * FROM book WHERE book_id=#{book_id}

</select>
    <!--================================= 还书(将原来的书籍数量+1) ===========================================-->
    <update id="Return_Book" parameterType="Book">

    UPDATE  book SET book_number=#{book_number} WHERE id=#{id}

</update>
    <!--================================= 借书(将原来的书籍数量-1) ===========================================-->
    <update id="Borrowing_Book" parameterType="Book">

        UPDATE  book SET book_number=#{book_number} WHERE id=#{id}

    </update>
    <!--================================= 还书(将借阅记录设置为已还) ===========================================-->
    <update id="Return_Book_Borrowing" parameterType="Borrowing">
    UPDATE borrowing SET  borrowing_Return=#{borrowing_Return},borrowing_Return_Time=#{borrowing_Return_Time} where  customer_Id=#{customer_Id.id} and book_id=#{book_id.book_id}
</update>
    <!--================================= 查看某本书是否已经还过 ===========================================-->
    <select id="select_Book_isReturn" parameterType="Borrowing" resultType="int">
    select  COUNT(borrowing_Return) from borrowing where  customer_Id=#{customer_Id.id} and book_id=#{book_id.book_id} and borrowing_Return='0'
</select>
    <!--================================= 查看有没有相关的借阅记录 ===========================================-->
    <select id="select_borrowing_count" parameterType="Borrowing" resultType="int">

    select COUNT(id) from borrowing where customer_Id=#{customer_Id.id} and book_id=#{book_id.book_id}
</select>
    <!--================================= 查看某本书是否正在被借阅并且还未归还 ===========================================-->
    <select id="select_borrowingAndNotReturn" parameterType="String" resultType="int">
    select COUNT(id) from borrowing where  book_id=#{book_id} AND borrowing_Return='0'
</select>


    <!--========================================借阅表跟Book表关联================================-->
    <resultMap id="borrowing" type="Borrowing">
        <!--关联BOOK类型表-->
        <association property="book_id" javaType="Book" column="book_id"
                     select="com.lcvc.tsg.dao.AdminDao.BookDao.getBook_whereBook_id"></association>
    </resultMap>

    <!--================================= 查看某个用户相关的借阅记录 ===========================================-->
    <select id="myBorrowingRecord"  resultMap="borrowing">
    SELECT  * FROM  borrowing WHERE customer_Id=#{customer_Id}   order by borrowing_Time desc limit #{index},10
</select>

    <!--================================= 查看某个用户已还相关的借阅记录 ===========================================-->
    <select id="myBorrowingIsReturnRecord"  resultMap="borrowing">
        SELECT  * FROM  borrowing WHERE customer_Id=#{customer_Id} AND borrowing_Return='1' order by borrowing_Time desc limit #{index},10
    </select>
    <!--================================= 查看某个用户未还相关的借阅记录 ===========================================-->
    <select id="myBorrowingNotReturnRecord"  resultMap="borrowing">
        SELECT  * FROM  borrowing WHERE customer_Id=#{customer_Id} AND borrowing_Return='0' order by borrowing_Time desc limit #{index},10
    </select>

    <!--================================= 查看某个用户相关的借阅记录（个数） ===========================================-->
    <select id="myBorrowingRecordCount"  parameterType="int" resultType="int">
        SELECT  count(id) FROM  borrowing WHERE customer_Id=#{customer_Id}
    </select>

    <!--================================= 查看某个用户已还相关的借阅记录（个数） ===========================================-->
    <select id="myBorrowingIsReturnRecordCount"  parameterType="int" resultType="int">
        SELECT  count(id) FROM  borrowing WHERE customer_Id=#{customer_Id} AND borrowing_Return='1'
    </select>
    <!--================================= 查看某个用户未还相关的借阅记录（个数） ===========================================-->
    <select id="myBorrowingNotReturnRecordCount"  parameterType="int" resultType="int">
        SELECT  count(id) FROM  borrowing WHERE customer_Id=#{customer_Id} AND borrowing_Return='0'
    </select>




    <!--=============================== 搜索书（通过书名）==================================-->
    <select id="SearchBook" parameterType="String" resultMap="book">
    SELECT * from book where book_name like concat('%',#{searchs},'%')  limit 0,15
</select>
    <!--========================= 搜索书（通过书名并且还带类型的搜索）======================-->
    <select id="SearchBookWhereBookTypeAndName" parameterType="Book" resultMap="book">
    SELECT * from book where book_name like concat('%',#{book_name},'%') AND book_type=#{book_type.id}  limit 0,15

</select>

    <!--=====================================搜索书(以类型分类)=================================-->
    <select id="SearchBookWhereBookType" parameterType="int" resultMap="book">

    SELECT * from book where  book_type=#{type_id}   limit 0,15
</select>






    <!--==============================推荐阅读的书 (前4)============================ -->
    <select id="Recommend_Book" parameterType="int" resultMap="book">
    select * from book  WHERE book_type=#{bookType_id} order by book_readingNumber desc limit 0,4
</select>

    <!--==============================修改书籍============================ -->
    <update id="updateBook" parameterType="Book">
        UPDATE book
        <set>
            <if test="book_name !=null">book_name=#{book_name},</if>
            <if test="book_icon !=null">book_icon=#{book_icon},</if>
            <if test="book_number!=null ">book_number=#{book_number},</if>
            <if test="book_author !=null">book_author=#{book_author},</if>
            <if test="book_editorsID.id !=null">book_editorsID=#{book_editorsID.id},</if>
            <if test="book_type.id !=null">book_type=#{book_type.id},</if>
            <if test="book_description !=null">book_description=#{book_description}</if>
        </set>
        <where>
            id=#{id}
        </where>
    </update>
    <!--==============================删除书籍============================ -->
    <delete id="delete_book" parameterType="int">
    DELETE FROM book WHERE id =#{id}
</delete>
</mapper>